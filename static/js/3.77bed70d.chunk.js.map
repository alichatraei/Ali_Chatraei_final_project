{"version":3,"sources":["containers/Orders/Order/Order.js","containers/Orders/Orders.js"],"names":["order","props","className","products","map","product","title","size","amount","id","price","Orders","this","fetchOrders","token","userId","orders","Spinner","loading","length","ScrollToTopOnMount","Component","connect","state","auth","dispatch","actions","ErrorHandler","axios"],"mappings":"0PA8BeA,EA3BD,SAACC,GACb,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAU,iBAAd,SACGD,EAAME,SAASC,KAAI,SAACC,GAAD,OAClB,+BACE,oBAAGH,UAAU,cAAb,UACE,sBAAMA,UAAU,OAAhB,iEACCG,EAAQC,SAEX,oBAAGJ,UAAU,cAAb,UACE,sBAAMA,UAAU,OAAhB,uEACCG,EAAQE,QAEX,oBAAGL,UAAU,cAAb,UACE,sBAAMA,UAAU,OAAhB,6EACCG,EAAQG,UAEX,yBAbOH,EAAQI,SAiBrB,oBAAGP,UAAU,cAAb,oDAAqCD,EAAMS,MAA3C,sD,QCbAC,E,uKACJ,WACEC,KAAKX,MAAMY,YAAYD,KAAKX,MAAMa,MAAOF,KAAKX,MAAMc,U,oBAGtD,WACE,IAAIC,EAAS,cAACC,EAAA,EAAD,IAab,OAZKL,KAAKX,MAAMiB,UAETF,EADwB,IAA7BJ,KAAKX,MAAMe,OAAOG,OACJ,sLACAP,KAAKX,MAAMe,OAAOZ,KAAI,SAACJ,GAAD,OAC9B,cAAC,EAAD,CAEEG,SAAUH,EAAMG,SAChBO,MAAOV,EAAMU,OAFRV,EAAMS,QAQnB,qCACE,cAACW,EAAA,EAAD,IACA,sBAAKlB,UAAU,mBAAf,UACE,oBAAIA,UAAU,aAAd,yBACA,mBAAGA,UAAU,YAAb,+QAGA,oBAAIA,UAAU,aAAd,SAA4Bc,c,GA3BjBK,aA0DNC,uBAhBS,SAACC,GACvB,MAAO,CACLP,OAAQO,EAAMvB,MAAMgB,OACpBE,QAASK,EAAMvB,MAAMkB,QACrBJ,MAAOS,EAAMC,KAAKV,MAClBC,OAAQQ,EAAMC,KAAKT,WAII,SAACU,GAC1B,MAAO,CACLZ,YAAa,SAACC,EAAOC,GAAR,OACXU,EAASC,IAAoBZ,EAAOC,QAI3BO,CAGbK,YAAahB,EAAQiB","file":"static/js/3.77bed70d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Order.scss\";\r\n\r\nconst order = (props) => {\r\n  return (\r\n    <li className=\"order-item\">\r\n      <ul className=\"order-products\">\r\n        {props.products.map((product) => (\r\n          <li key={product.id}>\r\n            <p className=\"order-title\">\r\n              <span className=\"bold\">نام محصول: </span>\r\n              {product.title}\r\n            </p>\r\n            <p className=\"order-title\">\r\n              <span className=\"bold\">سایز محصول: </span>\r\n              {product.size}\r\n            </p>\r\n            <p className=\"order-title\">\r\n              <span className=\"bold\">تعداد محصول: </span>\r\n              {product.amount}\r\n            </p>\r\n            <hr />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <p className=\"order-price\">قیمت کل: {props.price}.۰۰۰ ریال</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default order;\r\n","import React, { Component } from \"react\";\r\nimport \"./Orders.scss\";\r\nimport axios from \"../../axios\";\r\nimport ErrorHandler from \"../../hoc/ErrorHandler\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport Order from \"./Order/Order\";\r\nimport ScrollToTopOnMount from \"../../shared/ScrollToTopOnMount\";\r\n\r\nclass Orders extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchOrders(this.props.token, this.props.userId);\r\n  }\r\n\r\n  render() {\r\n    let orders = <Spinner />;\r\n    if (!this.props.loading) {\r\n      this.props.orders.length === 0\r\n        ? (orders = <p>شما تا الان هیچ محصولی ندارید</p>)\r\n        : (orders = this.props.orders.map((order) => (\r\n            <Order\r\n              key={order.id}\r\n              products={order.products}\r\n              price={order.price}\r\n            />\r\n          )));\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <ScrollToTopOnMount />\r\n        <div className=\"orders-container\">\r\n          <h2 className=\"main-title\">Your Orders</h2>\r\n          <p className=\"main-info\">\r\n            با به تن کردن این محصول به زیبایی خالص خود دست یابید\r\n          </p>\r\n          <ul className=\"order-list\">{orders}</ul>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nOrders.propTypes = {\r\n  orders: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  token: PropTypes.string.isRequired,\r\n  userId: PropTypes.string.isRequired,\r\n  fetchOrders: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchOrders: (token, userId) =>\r\n      dispatch(actions.fetchOrders(token, userId)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}